# Cloud Build configuration for deploying Flask app to Cloud Run
steps:
  # Install dependencies
  - name: python:3.13-slim
    entrypoint: pip
    args: ["install", "-r", "requirements.txt", "--user"]

  # Run tests (optional - comment out if no tests configured)
  # - name: python:3.13-slim
  #   entrypoint: python
  #   args: ["-m", "pytest", "--junitxml=${SHORT_SHA}_test_log.xml"]

  # Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/libro-api:${SHORT_SHA}',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/libro-api:latest',
      '.'
    ]

  # Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '--all-tags',
      '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/libro-api'
    ]

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/libro-api:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--memory=1Gi'
      - '--cpu=1'
      - '--max-instances=10'
      - '--set-env-vars=FLASK_ENV=production'
      - '--set-secrets=GOOGLE_AI_STUDIO_API_KEY=google-ai-key:latest'
      - '--set-secrets=POSTGRES_PASSWORD=postgres-password:latest'
      - '--set-env-vars=POSTGRES_USER=${_POSTGRES_USER}'
      - '--set-env-vars=POSTGRES_DB=${_POSTGRES_DB}'
      - '--set-env-vars=POSTGRES_HOST=${_POSTGRES_HOST}'
      - '--set-env-vars=POSTGRES_PORT=${_POSTGRES_PORT}'
      - '--set-secrets=SECRET_KEY=flask-secret-key:latest'
      - '--set-secrets=JWT_SECRET_KEY=jwt-secret-key:latest'

# Substitution variables (set in Cloud Build trigger)
substitutions:
  _REGION: us-central1
  _ARTIFACT_REGISTRY_REPO: libro-repo
  _SERVICE_NAME: libro-api
  _POSTGRES_USER: postgres
  _POSTGRES_DB: libros
  _POSTGRES_HOST: libros.cnbxfgxqtgfc.us-east-1.rds.amazonaws.com
  _POSTGRES_PORT: "5432"

# Store the built images
images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/libro-api:${SHORT_SHA}'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_STANDARD_4
