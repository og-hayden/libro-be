"""Add metadata tables for books and chapters

Revision ID: 39713bb8ae5c
Revises: c4397bbc5408
Create Date: 2025-09-08 23:43:46.079090

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '39713bb8ae5c'
down_revision = 'c4397bbc5408'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('characters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('normalized_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('characters', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_characters_normalized_name'), ['normalized_name'], unique=True)

    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('normalized_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('locations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_locations_normalized_name'), ['normalized_name'], unique=True)

    op.create_table('themes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('normalized_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parent_theme_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_theme_id'], ['themes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('themes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_themes_normalized_name'), ['normalized_name'], unique=True)

    op.create_table('book_metadata',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('author', sa.String(length=255), nullable=False),
    sa.Column('genre', sa.Enum('LAW', 'HISTORY', 'WISDOM', 'PROPHECY', 'GOSPEL', 'EPISTLE', 'APOCALYPTIC', name='bookgenre'), nullable=False),
    sa.Column('primary_audience', sa.String(length=255), nullable=False),
    sa.Column('start_year', sa.Integer(), nullable=False),
    sa.Column('end_year', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.PrimaryKeyConstraint('book_id')
    )
    op.create_table('book_themes',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('theme_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['theme_id'], ['themes.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'theme_id')
    )
    op.create_table('chapter_characters',
    sa.Column('chapter_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chapter_id'], ['chapters.id'], ),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.PrimaryKeyConstraint('chapter_id', 'character_id')
    )
    op.create_table('chapter_locations',
    sa.Column('chapter_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chapter_id'], ['chapters.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('chapter_id', 'location_id')
    )
    op.create_table('chapter_metadata',
    sa.Column('chapter_id', sa.Integer(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['chapter_id'], ['chapters.id'], ),
    sa.PrimaryKeyConstraint('chapter_id')
    )
    op.create_table('chapter_themes',
    sa.Column('chapter_id', sa.Integer(), nullable=False),
    sa.Column('theme_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chapter_id'], ['chapters.id'], ),
    sa.ForeignKeyConstraint(['theme_id'], ['themes.id'], ),
    sa.PrimaryKeyConstraint('chapter_id', 'theme_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('chapter_themes')
    op.drop_table('chapter_metadata')
    op.drop_table('chapter_locations')
    op.drop_table('chapter_characters')
    op.drop_table('book_themes')
    op.drop_table('book_metadata')
    with op.batch_alter_table('themes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_themes_normalized_name'))

    op.drop_table('themes')
    with op.batch_alter_table('locations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_locations_normalized_name'))

    op.drop_table('locations')
    with op.batch_alter_table('characters', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_characters_normalized_name'))

    op.drop_table('characters')
    # ### end Alembic commands ###
